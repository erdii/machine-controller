apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:kubelet-bootstrap
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-bootstrapper
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:bootstrappers:machine-controller:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machine-controller:node-autoapprove-bootstrap
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:bootstrappers:machine-controller:default-node-token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  resourceNames:
  - machine-controller
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: kube-public
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: machine-controller
  namespace: default
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-system
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: kube-public
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: machine-controller
  namespace: default
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: machine-controller
subjects:
- kind: ServiceAccount
  name: machine-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: machine-controller
  labels:
    local-testing: "true"
rules:
- apiGroups:
  - ""
  resources:
  - "events"
  verbs:
  - "create"
  - "patch"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  verbs:
  - "create"
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  resourceNames:
  - "machines.machine.k8s.io"
  verbs:
  - "*"
- apiGroups:
  - "machine.k8s.io"
  resources:
  - "machines"
  verbs:
  - "*"
- apiGroups:
  - "cluster.k8s.io"
  resources:
  - "machines"
  - "machinesets"
  - "machinesets/status"
  - "machinedeployments"
  - "machinedeployments/status"
  - "clusters"
  - "clusters/status"
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - "nodes"
  verbs:
  - "*"
# Pods are required for draining
# PVs are required for vsphere to detach them prior to deleting the instance
# Secrets and configmaps are needed for the boostrap token creation and when a ref is used for a
# value in the machineSpec
- apiGroups:
  - ""
  resources:
  - "pods"
  verbs:
  - "list"
  - "get"
- apiGroups:
  - ""
  resources:
  - "persistentvolumes"
  - "secrets"
  - "configmaps"
  verbs:
  - "list"
  - "get"
  - "watch"
- apiGroups:
  - ""
  resources:
  - "pods/eviction"
  verbs:
  - "create"
# The following roles are required for NodeCSRApprover controller to be able
# to reconcile CertificateSigningRequests for kubelet serving certificates.
- apiGroups:
  - "certificates.k8s.io"
  resources:
  - "certificatesigningrequests"
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - "certificates.k8s.io"
  resources:
  - "certificatesigningrequests/approval"
  verbs:
  - "update"
- apiGroups:
  - "certificates.k8s.io"
  resources:
  - "signers"
  resourceNames:
  - "kubernetes.io/kubelet-serving"
  verbs:
  - "approve"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: machine-controller
  labels:
    local-testing: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: machine-controller
subjects:
  - kind: ServiceAccount
    name: machine-controller
    namespace: kube-system